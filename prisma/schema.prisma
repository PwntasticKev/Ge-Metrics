generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model favorites {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  visibility Boolean?
  updated_at DateTime? @db.Timestamptz(6)
}

model goals {
  id         Int       @id
  user_id    Int?
  goal_price Int?
  updated_at DateTime? @db.Timestamptz(6)
}

model subscriptions {
  id                Int       @id
  user_id           Int?
  plan              String?   @db.Char
  start_date        DateTime? @db.Timestamptz(6)
  end_date          DateTime? @db.Timestamptz(6)
  status            String?   @db.Char
  payment_method    String?   @db.Char
  last_payment_date DateTime? @db.Timestamptz(6)
  next_payment_date DateTime? @db.Timestamptz(6)
  auto_renewal      String?   @db.Char
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model transactions {
  id          Int       @default(autoincrement())
  user_id     Int?
  date        DateTime? @db.Timestamptz(6)
  description String?   @db.VarChar(300)
  amount      BigInt?
  notes       String?   @db.Char
  created_at  DateTime? @db.Timestamp(6)
  updated_at  DateTime? @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)

  @@ignore
}

model users {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  name           String?   @db.VarChar(50)
  runescape_name String?   @db.VarChar(50)
  membership     Int?
  img            String?
  timezone       String?   @db.VarChar
  mailchimp_api_key String? @db.VarChar(255)
  access         Boolean   @default(false)
  role           String?   @default("user") @db.VarChar(20)
  approved_by    Int?
  approved_at    DateTime? @db.Timestamp(6)
  phone_number   String?   @db.VarChar(20)
  otp_enabled    Boolean   @default(false)
  otp_secret     String?   @db.VarChar(255)
  backup_codes   String?   @db.Text
  master_password_hash String? @db.VarChar(255)
  created_at     DateTime? @db.Timestamp(6)
  deleted_at     DateTime? @db.Time(6)
  updated_at     DateTime? @db.Time(6)
  firebase_uid   String?   @db.VarChar(100)
}

model parties {
  party_id       Int      @id
  user_id        Int?
  clan_id        Int?
  creator_id     Int?
  is_invite_only Boolean?
}

model party_items {
  id       Int  @id
  item_id  Int?
  party_id Int?
}

model party_members {
  id       Int  @id
  user_id  Int?
  party_id Int?
}

model item_price_history {
  id          Int      @id @default(autoincrement())
  item_id     Int
  timestamp   DateTime @db.Timestamptz(6)
  high_price  Int?
  low_price   Int?
  volume      BigInt?
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  @@unique([item_id, timestamp])
  @@index([item_id])
  @@index([timestamp])
  @@index([volume])
}

model watchlist {
  id                    Int      @id @default(autoincrement())
  user_id               Int
  item_id               Int
  item_name             String   @db.VarChar(255)
  volume_threshold      BigInt?  // Alert when volume exceeds this threshold
  price_drop_threshold  BigInt?  // Alert when price drops below this absolute value (in GP)
  price_spike_threshold BigInt?  // Alert when price spikes above this absolute value (in GP)
  abnormal_activity     Boolean  @default(false) // Monitor for any abnormal activity
  is_active             Boolean  @default(true)
  created_at            DateTime @default(now()) @db.Timestamptz(6)
  updated_at            DateTime @updatedAt @db.Timestamptz(6)

  @@unique([user_id, item_id])
  @@index([user_id])
  @@index([item_id])
  @@index([is_active])
}

model volume_alerts {
  id                Int      @id @default(autoincrement())
  user_id           Int
  item_id           Int
  alert_type        String   @db.VarChar(50) // 'volume_dump', 'price_drop', etc.
  triggered_volume  BigInt?
  triggered_price   Int?
  price_drop_percent Float?
  alert_sent        Boolean  @default(false)
  email_sent_at     DateTime? @db.Timestamptz(6)
  created_at        DateTime @default(now()) @db.Timestamptz(6)

  @@index([user_id])
  @@index([item_id])
  @@index([alert_type])
  @@index([alert_sent])
  @@index([created_at])
}

model alert_cooldowns {
  id         Int      @id @default(autoincrement())
  user_id    Int
  item_id    Int
  alert_type String   @db.VarChar(50)
  cooldown_until DateTime @db.Timestamptz(6)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@unique([user_id, item_id, alert_type])
  @@index([user_id])
  @@index([cooldown_until])
}

model abnormal_activity_patterns {
  id                    Int      @id @default(autoincrement())
  item_id               Int
  avg_volume_24h        BigInt?  // Average volume over 24 hours
  avg_volume_7d         BigInt?  // Average volume over 7 days
  avg_price_change_24h  Float?   // Average price change over 24 hours
  price_volatility      Float?   // Price volatility indicator
  volume_spike_threshold BigInt? // Dynamic threshold for volume spikes
  last_calculated       DateTime @db.Timestamptz(6)
  created_at            DateTime @default(now()) @db.Timestamptz(6)

  @@unique([item_id])
  @@index([item_id])
  @@index([last_calculated])
}

model otp_tokens {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @db.VarChar(10)
  token_type String   @db.VarChar(20) // 'login', 'setup', 'master_access'
  expires_at DateTime @db.Timestamptz(6)
  used       Boolean  @default(false)
  created_at DateTime @default(now()) @db.Timestamptz(6)

  @@index([user_id])
  @@index([token])
  @@index([expires_at])
}

model master_access_logs {
  id              Int      @id @default(autoincrement())
  admin_user_id   Int      // The admin who used master access
  target_user_id  Int      // The user account accessed
  access_reason   String?  @db.Text
  ip_address      String?  @db.VarChar(45)
  user_agent      String?  @db.Text
  session_duration Int?    // Duration in minutes
  created_at      DateTime @default(now()) @db.Timestamptz(6)

  @@index([admin_user_id])
  @@index([target_user_id])
  @@index([created_at])
}

model systemSettings {
  id          Int      @id @default(autoincrement())
  section     String   @db.VarChar(50)
  key         String   @db.VarChar(50)
  value       Json
  description String?  @db.Text
  dataType    String   @db.VarChar(20) // 'string', 'number', 'boolean', 'json'
  isSecret    Boolean  @default(false)
  updatedBy   Int?     // User ID of the last user who updated this setting
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @updatedAt @db.Timestamptz(6)

  @@unique([section, key])
  @@index([section])
  @@index([isSecret])
}
